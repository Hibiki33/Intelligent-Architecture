import numpy as np
import random

a1 = [[ 111,   25,   32,   66,   12,   99,   28,   16,   95],
      [  63,   90,  102,   40,   73,   16,   53,   33,   27],
      [  39,   79,   12,   83,  112,   59,   34,   49,   57],
      [  18,  103,   86,   51,  104,   36,  105,  112,   58],
      [  52,   12,   52,    1,   95,  123,   34,   89,   11],
      [  50,  123,   90,   74,   99,  100,   95,   12,   97],
      [  12,   94,   55,   14,  115,   84,  110,   64,   18],
      [  74,  105,  111,   43,   63,  107,  111,   56,   15]]

a2 = [[ 111,   25,   32,   66,  -12,  -99,  -28,   16,  -95],
      [  63,  -90, -102,   40,   73,   16,  -53,  -33,  -27],
      [ -39,  -79,  -12,  -83, -112,   59,   34,  -49,  -57],
      [ -18,  103,  -86,  -51, -104,   36, -105,  112,   58],
      [  52,  -12,  -52,    1,  -95, -123,   34,  -89,   11],
      [  50,  123,   90,  -74,   99,  100,   95,  -12,  -97],
      [  12,  -94,   55,  -14,  115,   84, -110,   64,   18],
      [  74, -105, -111,  -43,   63,  107,  111,   56,  -15]]

b  = [[-116,   47,   89,  -42,  -82,  -50,   56,   35],
      [  -2, -109, -103,  114,  -47,   29,  -38,   96],
      [ -19, -124,  120,  -27,   56,   -6,   46,   85],
      [  20,    4,  108, -118,  -24,   82,  -17,   61],
      [-100, -122,  -83,   69,  -38,   38,  124,   98],
      [-103, -110,   34,  -84,  -86,   85,  -34,  -53],
      [  56,  -17,  109,  103,  -50,  -20,  -56, -117],
      [ -68,  -91,   12, -120,   94,  -50,   65, -112],
      [  78,    5,  -53,    7,   37,  -75, -102,  -60]]

a1 = np.matrix(a1)
a2 = np.matrix(a2)
b = np.matrix(b)

print(a1*b)
print(a2*b)

# pa = [
#      [random.randint(0,255) for i in range(9)],
#      [random.randint(0,255) for i in range(9)],
#      [random.randint(0,255) for i in range(9)],
#      [random.randint(0,255) for i in range(9)],
#      [random.randint(0,255) for i in range(9)],
#      [random.randint(0,255) for i in range(9)],
#      [random.randint(0,255) for i in range(9)],
#      [random.randint(0,255) for i in range(9)]
#      ]
# a = np.matrix(pa)
# pb = [
#      [random.randint(-127,127) for i in range(8)],
#      [random.randint(-127,127) for i in range(8)],
#      [random.randint(-127,127) for i in range(8)],
#      [random.randint(-127,127) for i in range(8)],
#      [random.randint(-127,127) for i in range(8)],
#      [random.randint(-127,127) for i in range(8)],
#      [random.randint(-127,127) for i in range(8)],
#      [random.randint(-127,127) for i in range(8)],
#      [random.randint(-127,127) for i in range(8)]
#      ]
# b = np.matrix(pb)
# print(a)
# for i in range(len(pa[0])):
#     print('fm_reg[{0}] <= '.format(i)+'{'+'8\'d{0: <4},8\'d{1: <4},8\'d{2: <4},8\'d{3: <4},8\'d{4: <4},8\'d{5: <4},8\'d{6: <4},8\'d{7: <4}'.format(pa[7][i],pa[6][i],pa[5][i],pa[4][i],pa[3][i],pa[2][i],pa[1][i],pa[0][i])+'};')
# print(b)
# for i in pb:
#     print('{0: >4},{1: >4},{2: >4},{3: >4},{4: >4},{5: >4},{6: >4},{7: >4}'.format(i[7],i[6],i[5],i[4],i[3],i[2],i[1],i[0]))
# x=np.array(a[0])[0]
# y=[i[0] for i in np.array(b)]
# # print(x,y)
# # print(sum(x[i]*y[i] for i in range(len(x))))
# print(a*b)

# [[ 57  82 191  95  42 253 146 191 175]
#  [239  45 105  46  18 230  71  93 168]
#  [ 18  71 173  39 100  64 220 190 242]
#  [231   2 135  55 206  11  44 197 218]
#  [144 192  84 151  23 226 167  71  19]
#  [ 93  29  40 252  32 156  37 242 196]
#  [ 72  19 166  76  46 149  43  90  56]
#  [218 107  78  28   2 187 175  56  26]]
# fm_reg[0] <= {8'd218 ,8'd72  ,8'd93  ,8'd144 ,8'd231 ,8'd18  ,8'd239 ,8'd57  };
# fm_reg[1] <= {8'd107 ,8'd19  ,8'd29  ,8'd192 ,8'd2   ,8'd71  ,8'd45  ,8'd82  };
# fm_reg[2] <= {8'd78  ,8'd166 ,8'd40  ,8'd84  ,8'd135 ,8'd173 ,8'd105 ,8'd191 };
# fm_reg[3] <= {8'd28  ,8'd76  ,8'd252 ,8'd151 ,8'd55  ,8'd39  ,8'd46  ,8'd95  };
# fm_reg[4] <= {8'd2   ,8'd46  ,8'd32  ,8'd23  ,8'd206 ,8'd100 ,8'd18  ,8'd42  };
# fm_reg[5] <= {8'd187 ,8'd149 ,8'd156 ,8'd226 ,8'd11  ,8'd64  ,8'd230 ,8'd253 };
# fm_reg[6] <= {8'd175 ,8'd43  ,8'd37  ,8'd167 ,8'd44  ,8'd220 ,8'd71  ,8'd146 };
# fm_reg[7] <= {8'd56  ,8'd90  ,8'd242 ,8'd71  ,8'd197 ,8'd190 ,8'd93  ,8'd191 };
# fm_reg[8] <= {8'd26  ,8'd56  ,8'd196 ,8'd19  ,8'd218 ,8'd242 ,8'd168 ,8'd175 };
# [[ -65 -126  -80  -96 -100   95   15   25]
#  [ 108   45   18   30   15  -55  -63  -32]
#  [ 127   44   22  108   32   -2   64  -58]
#  [ -85   86   22 -114  -86  100  -33 -123]
#  [ -27  -66  -88   37  -17   79   20 -100]
#  [-105   81   32   81  -71   54  -94    8]
#  [  83 -104  112  -31   44   66  -99   13]
#  [ -84   45   52   55   17   92  -62  124]
#  [ 122   72  110 -127  -79  -70  -37  -27]]
#   25,  15,  95,-100, -96, -80,-126, -65
#  -32, -63, -55,  15,  30,  18,  45, 108
#  -58,  64,  -2,  32, 108,  22,  44, 127
# -123, -33, 100, -86,-114,  22,  86, -85
# -100,  20,  79, -17,  37, -88, -66, -27
#    8, -94,  54, -71,  81,  32,  81,-105
#   13, -99,  66,  44, -31, 112,-104,  83
#  124, -62,  92,  17,  55,  52,  45, -84
#  -27, -37, -70, -79,-127, 110,  72, 122
# [[ 11058  36814  53142  12587 -29359  41961 -50935  -5281]
#  [ -7309   6826  22056 -14624 -49024  39944 -34319    746]
#  [ 47558  13571  58890  -3580 -11005  27775 -40948  -6255]
#  [  4654 -11066   7112 -23508 -39700  49701 -11386 -10282]
#  [ -4927  11161  26800   -734 -31201  48297 -51965 -16019]
#  [-29842  44697  39970 -31375 -50619  54298 -46131  -8674]
#  [ -2052  18266  16282  13198 -20502  31941 -16996 -10985]
#  [ -1784 -15606  17998  -2912 -26820  42607 -38700   3871]]
# [Finished in 0.2s]